# A program using only ARMv4 semaphore instructions.
# Each line consists of the following components:
#     <big-endian instruction> <text assembly for instruction> Updates=[<register/flag updates>]

# --- SWP ---
SET_MEMORY 0x10=[0x0D, 0x0C, 0x0B, 0x0A]
SET R1=0xFF001100, R2=0x10
0xe1020091 SWP R0, R1, [R2] Updates=[R0=0x0A0B0C0D]                       # Load word into R0 and store from R1, no address rotation
CHECK_MEMORY 0x10=[0x00, 0x11, 0x00, 0xFF]

SET_MEMORY 0x14=[0x1, 0x2, 0x3, 0x4]
SET R0=0x00000123, R2=0x14
0xe1020090 SWP R0, R0, [R2] Updates=[R0=0x04030201]                       # Load word into R0 and store from R0, no address rotation
CHECK_MEMORY 0x14=[0x23, 0x01, 0x0, 0x0]

SET_MEMORY 0x10=[0x1, 0x2, 0x3, 0x4]
SET R0=0x0, R1=0x10001F, R2=0x11
0xe1020091 SWP R0, R1, [R2] Updates=[R0=0x01040302]                       # Load word into R0 and store from R1, 8 bit rotation
CHECK_MEMORY 0x10=[0x1F, 0x0, 0x10, 0x0]

SET_MEMORY 0x10=[0x1, 0x2, 0x3, 0x4]
SET R0=0x0, R1=0x10001F, R2=0x12
0xe1020091 SWP R0, R1, [R2] Updates=[R0=0x02010403]                       # Load word into R0 and store from R1, 16 bit rotation
CHECK_MEMORY 0x10=[0x1F, 0x0, 0x10, 0x0]

SET_MEMORY 0x10=[0x1, 0x2, 0x3, 0x4]
SET R0=0x0, R1=0x10001F, R2=0x13
0xe1020091 SWP R0, R1, [R2] Updates=[R0=0x03020104]                       # Load word into R0 and store from R1, 24 bit rotation
CHECK_MEMORY 0x10=[0x1F, 0x0, 0x10, 0x0]

# --- SWPB ---
SET_MEMORY 0x20=[0xAA, 0x22, 0xBB, 0xFF]
SET R1=0xFFFFFF2E, R2=0x21
0xe1420091 SWPB R0, R1, [R2] Updates=[R0=0x22]                            # Load byte into R0 and store from R1
CHECK_MEMORY 0x20=[0xAA, 0xE, 0xBB, 0xFF]
