# A program using only ARMv4 load/store multiple instructions.
# Each line consists of the following components:
#     <big-endian instruction> <text assembly for instruction> Updates=[<register/flag updates>]


# To begin, all registers and flags are 0
SET N=0, C=0, Z=0, V=0

# --- LDM (1) ---

SET_MEMORY 0x20=[0xF3, 0x66, 0x8E, 0x27]
SET_MEMORY 0x24=[0xAA, 0xA0, 0x8C, 0x26]
SET_MEMORY 0x28=[0xBA, 0x05, 0xED, 0x9A]
SET_MEMORY 0x2C=[0x8A, 0xAA, 0x77, 0xC4]
SET_MEMORY 0x30=[0x76, 0x65, 0xE9, 0x3D]
SET_MEMORY 0x34=[0xC6, 0xEB, 0xE4, 0x41]
SET R0=0x24
SET R4=0x0, R5=0x0, R6=0x0, R15=0x0
0xe8b08070 LDMIA R0!, {R4-R6, PC} Updates=[R4=0x268CA0AA, R5=0x9AED05BA, R6=0xC477AA8A, R15=0x3DE96574, R0=0x34]


# --- LDM (2) ---

SET_MEMORY 0x20=[0xF3, 0x66, 0x8E, 0x27]
SET_MEMORY 0x24=[0xAA, 0xA0, 0x8C, 0x26]
SET_MEMORY 0x28=[0xBA, 0x05, 0xED, 0x9A]
SET_MEMORY 0x2C=[0x8A, 0xAA, 0x77, 0xC4]
SET_MEMORY 0x30=[0x76, 0x65, 0xE9, 0x3D]
SET_MEMORY 0x34=[0xC6, 0xEB, 0xE4, 0x41]
SET R0=0x24
SET R4=0x0, R5=0x0, R6=0x0, R7=0x0
0xe8d000f0 LDMIA R0, {R4-R7}^ Updates=[R4=0x268CA0AA, R5=0x9AED05BA, R6=0xC477AA8A, R7=0x3DE96576]


# --- LDM (3) ---

# Returns from FIQ mode to ARM SVC mode
SET_MEMORY 0x20=[0xF3, 0x66, 0x8E, 0x27]
SET_MEMORY 0x24=[0xAA, 0xA0, 0x8C, 0x26]
SET_MEMORY 0x28=[0xBA, 0x05, 0xED, 0x9A]
SET_MEMORY 0x2C=[0x8A, 0xAA, 0x77, 0xC4]
SET_MEMORY 0x30=[0x76, 0x65, 0xE9, 0x3D]
SET_MEMORY 0x34=[0xC6, 0xEB, 0xE4, 0x41]
SET R0=0x24
SET R4=0x0, R5=0x0, R6=0x0, R15=0x0
# Use FIQ mode to allow SPSR access
SET OPERATING_MODE=0b10001
# Set SPSR to have SVC operating mode with some SPSR flags set
SET OPERATING_MODE_SPSR=0b10011, N_SPSR=1, Z_SPSR=1, F_SPSR=1
0xe8f08070 LDMIA R0!, {R4-R6, PC}^ Updates=[R4=0x268CA0AA, R5=0x9AED05BA, R6=0xC477AA8A, R15=0x3DE96574, R0=0x34, N=1, Z=1, F=1, OPERATING_MODE=0b10011]

# Returns from FIQ mode to THUMB SVC mode
SET_MEMORY 0x20=[0xF3, 0x66, 0x8E, 0x27]
SET_MEMORY 0x24=[0xAA, 0xA0, 0x8C, 0x26]
SET_MEMORY 0x28=[0xBA, 0x05, 0xED, 0x9A]
SET_MEMORY 0x2C=[0x8A, 0xAA, 0x77, 0xC4]
SET_MEMORY 0x30=[0x76, 0x65, 0xE9, 0x3D]
SET_MEMORY 0x34=[0xC6, 0xEB, 0xE4, 0x41]
SET R0=0x24
SET R4=0x0, R5=0x0, R6=0x0, R15=0x0
# Use FIQ mode to allow SPSR access
SET OPERATING_MODE=0b10001
# Set SPSR to have SVC operating mode with some SPSR flags set
SET OPERATING_MODE_SPSR=0b10011, N_SPSR=1, Z_SPSR=1, F_SPSR=1, T_SPSR=1
0xe8f08070 LDMIA R0!, {R4-R6, PC}^ Updates=[R4=0x268CA0AA, R5=0x9AED05BA, R6=0xC477AA8A, R15=0x3DE96576, R0=0x34, N=1, Z=1, F=1, T=1, OPERATING_MODE=0b10011]


# --- STM (1) ---

SET_MEMORY 0x20=[0x00, 0x00, 0x00, 0x00]
SET_MEMORY 0x24=[0x00, 0x00, 0x00, 0x00]
SET_MEMORY 0x28=[0x00, 0x00, 0x00, 0x00]
SET_MEMORY 0x2C=[0x00, 0x00, 0x00, 0x00]
SET_MEMORY 0x30=[0x00, 0x00, 0x00, 0x00]
SET_MEMORY 0x34=[0x00, 0x00, 0x00, 0x00]
SET R0=0x20
SET R1=0xB6C1074C, R2=0x3434BCCE, R3=0xE631FCEE, R7=0x2A218EB8, R15=0x907D0EB4

0xe8a0808e STMIA R0!, {R1-R3, R7, PC} Updates=[R0=0x34]
CHECK_MEMORY 0x20=[0x4C, 0x07, 0xC1, 0xB6]
CHECK_MEMORY 0x24=[0xCE, 0xBC, 0x34, 0x34]
CHECK_MEMORY 0x28=[0xEE, 0xFC, 0x31, 0xE6]
CHECK_MEMORY 0x2c=[0xB8, 0x8E, 0x21, 0x2A]
CHECK_MEMORY 0x30=[0xB4, 0x0E, 0x7D, 0x90]
CHECK_MEMORY 0x34=[0x00, 0x00, 0x00, 0x00]


# --- STM (2) ---

SET_MEMORY 0x20=[0x00, 0x00, 0x00, 0x00]
SET_MEMORY 0x24=[0x00, 0x00, 0x00, 0x00]
SET_MEMORY 0x28=[0x00, 0x00, 0x00, 0x00]
SET_MEMORY 0x2C=[0x00, 0x00, 0x00, 0x00]
SET_MEMORY 0x30=[0x00, 0x00, 0x00, 0x00]
SET_MEMORY 0x34=[0x00, 0x00, 0x00, 0x00]
SET R0=0x20
SET R1=0xB6C1074C, R2=0x3434BCCE, R3=0xE631FCEE, R7=0x2A218EB8, R15=0x907D0EB4

0xe8c0808e STMIA R0, {R1-R3, R7, PC}^ Updates=[]
CHECK_MEMORY 0x20=[0x4C, 0x07, 0xC1, 0xB6]
CHECK_MEMORY 0x24=[0xCE, 0xBC, 0x34, 0x34]
CHECK_MEMORY 0x28=[0xEE, 0xFC, 0x31, 0xE6]
CHECK_MEMORY 0x2c=[0xB8, 0x8E, 0x21, 0x2A]
CHECK_MEMORY 0x30=[0xB4, 0x0E, 0x7D, 0x90]
CHECK_MEMORY 0x34=[0x00, 0x00, 0x00, 0x00]
